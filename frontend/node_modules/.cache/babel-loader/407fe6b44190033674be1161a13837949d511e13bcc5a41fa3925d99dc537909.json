{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Qwertyuiopas\\\\Desktop\\\\DucThinh\\\\frontend\\\\src\\\\Components\\\\Slider\\\\Slider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Slide from './Slide';\nimport styles from './Slider.module.css'; // Import CSS module\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slider = ({\n  slides\n}) => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const moveToNextSlide = () => {\n    setCurrentIndex(prevIndex => (prevIndex + 1) % slides.length);\n  };\n  const moveToPrevSlide = () => {\n    setCurrentIndex(prevIndex => (prevIndex - 1 + slides.length) % slides.length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.slider,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${styles.nav} ${styles.prev}`,\n      onClick: moveToPrevSlide,\n      children: \"<\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.sliderWrapper,\n      style: {\n        transform: `translateX(-${currentIndex * 100}%)`\n      },\n      children: slides.map((slide, index) => /*#__PURE__*/_jsxDEV(Slide, {\n        imageSrc: slide.imageSrc,\n        title: slide.title,\n        description: slide.description,\n        buttonText: slide.buttonText\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${styles.nav} ${styles.next}`,\n      onClick: moveToNextSlide,\n      children: \">\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(Slider, \"tusBbsahUVevXfyh6oH5R6YDC9Q=\");\n_c = Slider;\nexport default Slider;\nvar _c;\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["React","useState","Slide","styles","jsxDEV","_jsxDEV","Slider","slides","_s","currentIndex","setCurrentIndex","moveToNextSlide","prevIndex","length","moveToPrevSlide","className","slider","children","nav","prev","onClick","fileName","_jsxFileName","lineNumber","columnNumber","sliderWrapper","style","transform","map","slide","index","imageSrc","title","description","buttonText","next","_c","$RefreshReg$"],"sources":["C:/Users/Qwertyuiopas/Desktop/DucThinh/frontend/src/Components/Slider/Slider.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Slide from './Slide';\r\nimport styles from './Slider.module.css'; // Import CSS module\r\n\r\nconst Slider = ({ slides }) => {\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n    const moveToNextSlide = () => {\r\n        setCurrentIndex((prevIndex) => (prevIndex + 1) % slides.length);\r\n    };\r\n\r\n    const moveToPrevSlide = () => {\r\n        setCurrentIndex((prevIndex) => (prevIndex - 1 + slides.length) % slides.length);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.slider}>\r\n            <button className={`${styles.nav} ${styles.prev}`} onClick={moveToPrevSlide}>&lt;</button>\r\n            <div className={styles.sliderWrapper} style={{ transform: `translateX(-${currentIndex * 100}%)` }}>\r\n                {slides.map((slide, index) => (\r\n                    <Slide\r\n                        key={index}\r\n                        imageSrc={slide.imageSrc}\r\n                        title={slide.title}\r\n                        description={slide.description}\r\n                        buttonText={slide.buttonText}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <button className={`${styles.nav} ${styles.next}`} onClick={moveToNextSlide}>&gt;</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Slider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC1BD,eAAe,CAAEE,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIL,MAAM,CAACM,MAAM,CAAC;EACnE,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC1BJ,eAAe,CAAEE,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,GAAGL,MAAM,CAACM,MAAM,IAAIN,MAAM,CAACM,MAAM,CAAC;EACnF,CAAC;EAED,oBACIR,OAAA;IAAKU,SAAS,EAAEZ,MAAM,CAACa,MAAO;IAAAC,QAAA,gBAC1BZ,OAAA;MAAQU,SAAS,EAAE,GAAGZ,MAAM,CAACe,GAAG,IAAIf,MAAM,CAACgB,IAAI,EAAG;MAACC,OAAO,EAAEN,eAAgB;MAAAG,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1FnB,OAAA;MAAKU,SAAS,EAAEZ,MAAM,CAACsB,aAAc;MAACC,KAAK,EAAE;QAAEC,SAAS,EAAE,eAAelB,YAAY,GAAG,GAAG;MAAK,CAAE;MAAAQ,QAAA,EAC7FV,MAAM,CAACqB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrBzB,OAAA,CAACH,KAAK;QAEF6B,QAAQ,EAAEF,KAAK,CAACE,QAAS;QACzBC,KAAK,EAAEH,KAAK,CAACG,KAAM;QACnBC,WAAW,EAAEJ,KAAK,CAACI,WAAY;QAC/BC,UAAU,EAAEL,KAAK,CAACK;MAAW,GAJxBJ,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNnB,OAAA;MAAQU,SAAS,EAAE,GAAGZ,MAAM,CAACe,GAAG,IAAIf,MAAM,CAACgC,IAAI,EAAG;MAACf,OAAO,EAAET,eAAgB;MAAAM,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzF,CAAC;AAEd,CAAC;AAAChB,EAAA,CA5BIF,MAAM;AAAA8B,EAAA,GAAN9B,MAAM;AA8BZ,eAAeA,MAAM;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}